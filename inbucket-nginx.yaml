AWSTemplateFormatVersion: 2010-09-09
Description: Inbucket/nginx stack
Metadata:
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      -
        Label: 
          default: Aws Configuration
        Parameters: 
          - VpcId
          - AvailabilityZone
          - KeyName
          - InstanceType
      -
        Label: 
          default: Inbucket Configuration
        Parameters:
          - InbucketVersion
          - Username
          - Password 
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    AllowedPattern: '.+'
    ConstraintDescription: Vpc Id parameter can't be empty
  InstanceType:
    Type: String
    Default: t2.micro
    Description: Choose instance type
  KeyName:
    Type: String
    Default: ''
    Description: Key Pair name fo ssh acces to instances
  Username: 
    Type: String
    Default: 'inbucket'
    Description: Username for nginx basic auth
  Password:
    Type: String
    Default: 'inbucket'
    Description: Password for nginx basic auth
  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
    AllowedPattern: '.+'
    ConstraintDescription: Availability Zone parameter can't be empty
  InbucketVersion:
    Type: String
    Default: 'stable'
    Description: Inbucket docker image tag
  
Resources:
  InbucketSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Inbucket security group'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 25
        ToPort: 25
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 1100
        ToPort: 1100
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
  InbucketInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0b898040803850657
      KeyName: !Ref KeyName
      InstanceType: !Ref InstanceType 
      SecurityGroupIds:
        - !Ref InbucketSecurityGroup
      AvailabilityZone: !Ref AvailabilityZone
      UserData: 
        'Fn::Base64': !Sub |
            #!/bin/bash -xe
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource InbucketInstance --configsets default --region ${AWS::Region}
    Metadata: 
      AWS::CloudFormation::Init: 
        configSets:
          default: 
            - 'install-docker'
            - 'start-inbucket'
            - 'install-nginx'
            - 'config-nginx'
            - 'start-nginx'
        install-docker: 
          packages:
            yum:
              docker: []
          services:
            sysvinit:
              docker:
                enabled: "true"
                ensureRunning: "true"
                packages:
                  yum:
                    - "docker"
          commands:
            'add_user_to_docker_group':
              command: 'sudo usermod -a -G docker ec2-user'
        start-inbucket: 
         commands:
           '1_remove_postfix':
             command: sudo yum remove -y postfix
           '2_start_inbucket':
             command: !Sub |
              docker run -d -p 25:2500 -p 9000:9000 -p 1100:1100 inbucket/inbucket:${InbucketVersion}
        install-nginx:
         packages:
            yum:
              httpd: [] 
         commands:
           'install_nginx':
             command: sudo amazon-linux-extras install -y nginx1.12
        config-nginx: 
          files:
           "/etc/nginx/nginx.conf":
              content: !Sub |
                user nginx;
                worker_processes auto;
                error_log /var/log/nginx/error.log;
                pid /run/nginx.pid;

                # Load dynamic modules. See /usr/share/nginx/README.dynamic.
                include /usr/share/nginx/modules/*.conf;

                events {
                    worker_connections 1024;
                }

                http {
                    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                      '$status $body_bytes_sent "$http_referer" '
                                      '"$http_user_agent" "$http_x_forwarded_for"';

                    access_log  /var/log/nginx/access.log  main;

                    sendfile            on;
                    tcp_nopush          on;
                    tcp_nodelay         on;
                    keepalive_timeout   65;
                    types_hash_max_size 2048;

                    include             /etc/nginx/mime.types;
                    default_type        application/octet-stream;

                    # Load modular configuration files from the /etc/nginx/conf.d directory.
                    # See http://nginx.org/en/docs/ngx_core_module.html#include
                    # for more information.
                    include /etc/nginx/conf.d/*.conf;

                    server {
                        listen       80 default_server;
                        listen       [::]:80 default_server;
                        server_name  _;
                        root         /usr/share/nginx/html;

                        auth_basic "Restricted";
                        auth_basic_user_file /etc/nginx/auth.htpasswd;

                        # Load configuration files for the default server block.
                        include /etc/nginx/default.d/*.conf;

                        location / {
                          proxy_pass http://127.0.0.1:9000;
                          proxy_set_header Host $host;
                          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                          proxy_set_header X-Real-IP $remote_addr;
                        }

                        location /api/v1/monitor/messages {
                           proxy_pass http://127.0.0.1:9000/api/v1/monitor/messages;
                           proxy_http_version 1.1;
                           proxy_set_header Upgrade $http_upgrade;
                           proxy_set_header Connection "upgrade";
                           proxy_set_header X-Forwarded-For $remote_addr;
                           proxy_set_header Origin '';
                        }
                    }
                }
          commands:
             'set_basic_auth':
               command: !Sub |
                 sudo htpasswd -bc /etc/nginx/auth.htpasswd '${Username}' '${Password}'
        start-nginx: 
           commands:
             'start_nginx':
               command: sudo systemctl start nginx.service